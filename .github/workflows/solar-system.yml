name: Solar System Workflow
on:
  workflow_dispatch: null
  push:
    branches:
      - main
      - feature/*

env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    container:
      image: node:20

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      # - name: Setup NodeJS Version
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 20
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm install
      - name: Unit Testing
        run: npm test
      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml
        if: failure()
  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm install
      - name: code-coverage
        run: npm run coverage
        continue-on-error: true
      - name: Archive Code Coverage
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Report
          path: coverage
          retention-days: 5
        continue-on-error: true
  docker:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs:
      - unit-testing
      - code-coverage
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push image to github container registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
  dev-deploy:
    runs-on: ubuntu-latest
    needs:
      - docker
    environment:
      name: development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version:  'v1.26.0'
      - name: set kubectl context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - name: command to check installation status
        run: kubectl version --short -o yaml
